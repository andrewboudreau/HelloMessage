@page
@model IndexModel
@{
    ViewData["Title"] = "Pending";
}
@section Styles{
    <style>
        .form.pending ul {
            list-style: none;
        }

        .form.pending .input[type='checkbox'] {
            width: 15px;
            height: 15px;
        }
    </style>
}
<div>
    <h1 class="display-4">Respond to Pending Submissions</h1>
    @if (Model.Pending.Any())
    {
        <form method="POST" class="form pending">
            <ul>
                @foreach (var pending in Model.Pending)
                {
                    <li>
                        <label class="form-control" for="submissions">
                            <input class="form-input" name="submissions" type="checkbox" value="@pending.SubmissionId" />
                            <strong>@pending.UserId</strong>
                            <small>@pending.Created</small>
                        </label>
                    </li>
                }
            </ul>
            <input type="submit" value="Approve Selected" />
            <label for="reject">REJECT <input type="checkbox" name="reject" value="true" /></label>
        </form>
    }
    else
    {
        <div class="alert alert-info">The are no submissions pending.</div>
    }
</div>

<div class="modal alert alert-danger fade" id="ErrorModal" tabindex="-1" role="dialog" aria-labelledby="ErrorModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div>Connection Error...</div>
                <div><strong style="font-size: 1.5em;">Hit Refresh/F5</strong> to refresh. ;)</div>
            </div>
        </div>
    </div>
</div>

@section Scripts{  <!--Reference the SignalR library. -->
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@3.1.8/dist/browser/signalr.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@3.1.8/dist/browser/signalr.min.js"></script>

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {

            function onConnectionError(error) {
                if (error && error.message) {
                    console.error(error.message);
                }

                var modal = document.getElementById('ErrorModal');
                modal.classList.add('in');
                modal.style = 'display: block;';
            }

            const connection = new signalR.HubConnectionBuilder()
                .withUrl('/hubs/submission').build();

            connection.on('broadcastMessage', (name, message) => window.location.href = window.location.href);
            connection.onclose(onConnectionError);

            connection.start();
        });
    </script>
}